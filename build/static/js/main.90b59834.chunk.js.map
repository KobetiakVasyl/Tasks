{"version":3,"sources":["actions/user-actions.js","action-types/index.js","service/Task.js","service/User.js","hoc/api.js","actions/message-actions.js","components/Registration.js","helpers/tokenVerificator.js","components/Login.js","components/TaskEditor.js","actions/task-actions.js","components/Logger.js","components/ShareMenu.js","components/Header.js","components/Loader.js","App.js","reducer/index.js","store/store.js","serviceWorker.js","index.js"],"names":["onEnterUser","userName","type","payload","BASE_URL","getTasks","token","fetch","method","headers","then","res","json","catch","e","console","log","postTask","taskBody","body","JSON","stringify","deleteTask","taskId","putTask","_id","shareTask","id","userArr","removeSharedLink","userId","registerUser","userData","loginUser","getAllUsers","withApiCall","Wrapped","props","TaskService","UserService","showErrorMessage","msg","RegistrationComponent","state","name","email","password","handleSubmit","event","preventDefault","serverRes","success","message","localStorage","setItem","handleInput","key","value","target","userDataCopy","setState","className","onSubmit","this","placeholder","required","onChange","to","Component","connect","user","dispatch","checkUserAndRedirect","isUserEntered","parse","getItem","_","get","constructor","Object","entries","length","pathname","LoginComponent","renderLogin","startLoading","TaskEditorComponent","title","content","scheduled","createdBy","renderTasks","tasks","map","index","split","renderButtons","onClick","handleSharingTask","bind","handleEditing","field","handleEditingTaskField","handleCancel","handleCreating","taskBodyCopy","showCreateTask","handleCreatingTask","showEditTask","indexOfCurrentTask","saveChanges","currentTaskData","createTask","deleteChosenTask","removeSharedLinkOfSelectedTask","onTaskLoaded","isTaskCreating","createButton","handleFunction","dataToEdit","isEditable","renderTaskEditor","saveButton","cancelButton","indexOfTask","LoggerComponent","renderSuccessMessage","onAnimationEnd","closeMessage","renderErrorMessage","hideMessage","element","document","getElementsByClassName","setTimeout","setAttribute","showSuccessMsg","showErrorMsg","successMsg","errorMsg","ShareMenuComponent","chosenUserNames","chosenUsersId","shareTaskWithSelectedUsers","shareSelectedTask","handleChoosingUser","chosenUserNamesCopy","chosenUsersIdCopy","includes","indexOf","splice","push","closeShareMenu","hideShareMenu","loadUsers","users","taskToShare","join","HeaderComponent","Loader","AppComponent","handleLogOut","onLeaveUser","showShareMenu","loader","showMsg","renderLogOutButton","ShareMenu","Logger","Header","exact","path","component","TaskEditor","initialState","store","createStore","action","taskDataCopy","tasksCopy","taskCopy","unshift","removeItem","applyMiddleware","thunkMiddleware","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90b59834.chunk.js","sourcesContent":["import {\r\n    ON_ENTER_USER,\r\n    ON_LEAVE_USER,\r\n    GET_USERS,\r\n    START_LOADING\r\n} from \"../action-types\";\r\n\r\nexport const onEnterUser = (userName) => {\r\n    return {\r\n        type: ON_ENTER_USER,\r\n        payload: `Welcome ${userName}!`\r\n    };\r\n};\r\n\r\nexport const onLeaveUser = () => {\r\n    return {\r\n        type: ON_LEAVE_USER\r\n    };\r\n};\r\n\r\nexport const startLoading = () => {\r\n    return {\r\n        type: START_LOADING\r\n    };\r\n};\r\n\r\nexport const loadUsers = message => {\r\n    return {\r\n        type: GET_USERS,\r\n        payload: message\r\n    }\r\n};\r\n","export const HANDLE_EDITING_TASK_FIELD = 'HANDLE_EDITING_TASK_FIELD';\r\nexport const HANDLE_CREATING_TASK = 'HANDLE_CREATING_TASK';\r\nexport const SHOW_EDIT_TASK = 'SHOW_EDIT_TASK';\r\nexport const HANDLE_SHARING_TASK = 'HANDLE_SHARING_TASK';\r\nexport const HIDE_SHARE_MENU = 'HIDE_SHARE_MENU';\r\n\r\nexport const SAVE_CHANGES = 'SAVE_CHANGES';\r\nexport const CREATE_TASK = 'CREATE_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const SHARE_TASK = 'SHARE_TASK';\r\nexport const HANDLE_CANCEL = 'HANDLE_CANCEL';\r\n\r\nexport const START_LOADING = 'START_LOADING';\r\n\r\nexport const ON_TASK_LOADED = 'ON_TASK_LOADED';\r\n\r\nexport const ON_ENTER_USER = 'ON_ENTER_USER';\r\nexport const ON_LEAVE_USER = 'ON_LEAVE_USER';\r\nexport const GET_USERS = 'GET_USERS';\r\n\r\nexport const SHOW_ERROR_MSG = 'SHOW_ERROR_MSG';\r\nexport const HIDE_MSG = 'HIDE_MSG';\r\n","class TaskService {\r\n    BASE_URL = 'https://tasks-heroku.herokuapp.com/api';\r\n\r\n    getTasks = (token) => {\r\n        return fetch(`${this.BASE_URL}/task`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e => console.log(e));\r\n    };\r\n\r\n    postTask = (taskBody, token) => {\r\n        return fetch(`${this.BASE_URL}/task`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(taskBody)\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e => console.log(e));\r\n    };\r\n\r\n\r\n    deleteTask = (taskId, token) => {\r\n        return fetch(`${this.BASE_URL}/task/${taskId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e => console.log(e));\r\n    };\r\n\r\n    putTask = (taskBody, token) => {\r\n        return fetch(`${this.BASE_URL}/task/${taskBody._id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(taskBody)\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e => console.log(e));\r\n    };\r\n\r\n    shareTask = (id, userArr, token) => {\r\n        return fetch(`${this.BASE_URL}/task/${id}/share`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(userArr)\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e => console.log(e));\r\n    };\r\n\r\n    removeSharedLink = (taskId, userId, token) => {\r\n        return fetch(`${this.BASE_URL}/task/${taskId}/remove`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(userId)\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e => console.log(e));\r\n    };\r\n}\r\n\r\nexport default new TaskService();\r\n\r\n","class UserService {\r\n    BASE_URL = 'https://tasks-heroku.herokuapp.com/api/user';\r\n\r\n    registerUser = (userData) => {\r\n        return fetch(`${this.BASE_URL}/register`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(userData)\r\n        })\r\n            .then(res => {\r\n               return res.json()\r\n            })\r\n            .catch(e => console.log(e));\r\n    };\r\n\r\n    loginUser = (userData) => {\r\n        return fetch(`${this.BASE_URL}/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(userData)\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e => console.log(e));\r\n    };\r\n\r\n    getAllUsers = (id, token) => {\r\n        return fetch(`${this.BASE_URL}/${id}`, {\r\n            method: 'GET',\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e => console.log(e));\r\n    }\r\n}\r\n\r\nexport default new UserService();\r\n\r\n","import React from 'react';\r\nimport TaskService from '../service/Task';\r\nimport UserService from '../service/User';\r\n\r\nexport const withApiCall = (Wrapped) => (props) => {\r\n    return <Wrapped {...props} TaskService={TaskService} UserService={UserService}/>;\r\n};","import {\r\n    HIDE_MSG, SHOW_ERROR_MSG\r\n} from \"../action-types\";\r\n\r\n\r\nexport const hideMessage = () => {\r\n    return {\r\n        type: HIDE_MSG\r\n    };\r\n};\r\n\r\nexport const showErrorMessage = (msg) => {\r\n    return {\r\n        type: SHOW_ERROR_MSG,\r\n        payload: msg\r\n    };\r\n};\r\n","import React, {Component} from 'react';\r\nimport './index.css';\r\nimport {onEnterUser} from \"../actions/user-actions\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {withApiCall} from \"../hoc/api\";\r\nimport {showErrorMessage} from \"../actions/message-actions\";\r\n\r\nexport class RegistrationComponent extends Component {\r\n    state = {\r\n        userData: {\r\n            name: '',\r\n            email: '',\r\n            password: ''\r\n        },\r\n    };\r\n\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {userData} = this.state;\r\n        const {onEnterUser, showErrorMessage, UserService: {registerUser}} = this.props;\r\n        return registerUser(userData)\r\n                    .then(serverRes => {\r\n                        if (serverRes.success) {\r\n                            localStorage.setItem('user', JSON.stringify({\r\n                                id: serverRes.id,\r\n                                name: serverRes.name,\r\n                                token: serverRes.token\r\n                            }));\r\n                            onEnterUser(serverRes.name);\r\n                        } else {\r\n                            return showErrorMessage(serverRes.message)\r\n                        }\r\n                    })\r\n                    .catch(e => showErrorMessage(e.message));\r\n    };\r\n\r\n    handleInput = (key, {target: {value}}) => {\r\n        let {userData} = this.state;\r\n        let userDataCopy = {...userData};\r\n        userDataCopy[key] = value;\r\n        this.setState({userData: userDataCopy});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={'container f-d-c'}>\r\n                <form onSubmit={this.handleSubmit} className={'d-f f-d-c'}>\r\n                    <h1 className={'d-f f-s-20px t-c-azure'}>Registration</h1>\r\n                    <input type=\"text\"\r\n                           placeholder={'Name'}\r\n                           name={'Name'}\r\n                           required={true}\r\n                           className={'input b-1px-s-cornflowerblue'}\r\n                           onChange={event => this.handleInput('name', event)}\r\n                    />\r\n\r\n                    <input type=\"text\"\r\n                           placeholder={'Email'}\r\n                           name={'Email'}\r\n                           required={true}\r\n                           className={'input b-1px-s-cornflowerblue'}\r\n                           onChange={event => this.handleInput('email', event)}\r\n\r\n                    />\r\n\r\n                    <input type=\"password\"\r\n                           placeholder={'Password'}\r\n                           name={'Password'}\r\n                           required={true}\r\n                           className={'input b-1px-s-cornflowerblue'}\r\n                           onChange={event => this.handleInput('password', event)}\r\n                    />\r\n                    <Link to={'/login'} className={'d-f link m-b-5px'}>\r\n                        I already have an account\r\n                    </Link>\r\n                    <button className={'button w-100 j-c-c p-10px'}>\r\n                        Register\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = ({user}) => {\r\n    return {user};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onEnterUser : name => dispatch(onEnterUser(name)),\r\n        showErrorMessage : msg => dispatch(showErrorMessage(msg))\r\n    };\r\n};\r\n\r\nexport default withApiCall(connect(mapStateToProps, mapDispatchToProps)(RegistrationComponent));","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport _ from 'lodash';\n\nexport function checkUserAndRedirect(isUserEntered) {\n    const  user = JSON.parse(localStorage.getItem('user'));\n\n    const token = _.get(user, 'token', false);\n    const name = _.get(user, 'token', false);\n    const id = _.get(user, 'token', false);\n\n    if (!user || !token || !name || !id) {\n        return <Redirect to={{\n            pathname: '/login'\n        }}/>;\n\n\n    } else if (user.constructor === Object && Object.entries(user).length === 3) {\n        return <Redirect to={'/main'}/>;\n\n    } else {\n        return <Redirect to={'/login'}/>;\n    }\n}","import React, {Component} from 'react';\r\nimport './index.css';\r\nimport {onEnterUser, startLoading} from \"../actions/user-actions\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {withApiCall} from \"../hoc/api\";\r\nimport {showErrorMessage} from \"../actions/message-actions\";\r\nimport {checkUserAndRedirect} from \"../helpers/tokenVerificator\";\r\n\r\nexport class LoginComponent extends Component {\r\n    state = {\r\n        userData: {\r\n            email: '',\r\n            password: '',\r\n        }\r\n    };\r\n\r\n    renderLogin = () => {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className={'form'}>\r\n                <h1 className={'d-f f-s-20px t-c-azure'}>Log in</h1>\r\n                <input type=\"text\"\r\n                       placeholder={'Email'}\r\n                       name={'Email'}\r\n                       required={true}\r\n                       className={'d-f input'}\r\n                       onChange={event => this.handleInput('email', event)}\r\n\r\n                />\r\n                <input type=\"password\"\r\n                       placeholder={'Password'}\r\n                       name={'Password'}\r\n                       required={true}\r\n                       className={'d-f input'}\r\n                       onChange={event => this.handleInput('password', event)}\r\n\r\n                />\r\n\r\n                <Link to={'/register'} className={'d-f link m-b-5px'}>\r\n                    I have no account\r\n                </Link>\r\n                <button className={'d-f button w-100 j-c-c p-10px'}>\r\n                    Log In\r\n                </button>\r\n            </form>\r\n        );\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {userData} = this.state;\r\n        const {onEnterUser, startLoading, showErrorMessage, UserService: {loginUser}} = this.props;\r\n        startLoading();\r\n        return loginUser(userData)\r\n            .then(serverRes => {\r\n                if (serverRes.success) {\r\n                    localStorage.setItem('user', JSON.stringify({\r\n                        id: serverRes.id,\r\n                        name: serverRes.name,\r\n                        token: serverRes.token\r\n                    }));\r\n                    onEnterUser(serverRes.name);\r\n                    checkUserAndRedirect();\r\n                } else {\r\n                    return showErrorMessage(serverRes.message);\r\n                }\r\n            })\r\n            .catch(e => showErrorMessage(e.message));\r\n    };\r\n\r\n    handleInput = (key, {target: {value}}) => {\r\n        let {userData} = this.state;\r\n        let userDataCopy = {...userData};\r\n        userDataCopy[key] = value;\r\n        this.setState({userData: userDataCopy});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={'container'}>\r\n                {this.renderLogin()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = ({user}) => {\r\n    return {user};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onEnterUser: name => dispatch(onEnterUser(name)),\r\n        startLoading: () => dispatch(startLoading()),\r\n        showErrorMessage: (msg) => dispatch(showErrorMessage(msg))\r\n    };\r\n};\r\n\r\nexport default withApiCall(connect(mapStateToProps, mapDispatchToProps)(LoginComponent));\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport _ from 'lodash';\r\n\r\nimport {\r\n    createTask,\r\n    handleCreatingTask,\r\n    handleEditingTaskField,\r\n    saveChanges,\r\n    onTaskLoaded,\r\n    showEditTask,\r\n    deleteTask,\r\n    handleSharingTask,\r\n    removeSharedLink,\r\n    handleCancel,\r\n} from \"../actions/task-actions\";\r\nimport {startLoading} from \"../actions/user-actions\";\r\nimport {showErrorMessage} from \"../actions/message-actions\";\r\n\r\nimport {withApiCall} from \"../hoc/api\";\r\nimport './index.css';\r\n\r\nclass TaskEditorComponent extends Component {\r\n    state = {\r\n        taskBody: {\r\n            title: '',\r\n            content: '',\r\n            scheduled: '',\r\n            createdBy: '',\r\n            userId: ''\r\n        },\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        const {startLoading, onTaskLoaded, showErrorMessage, TaskService: {getTasks}} = this.props;\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        if (user && user.token) {\r\n            startLoading();\r\n            return getTasks(user.token)\r\n                .then(res => res.success\r\n                    ? onTaskLoaded(res.message)\r\n                    : showErrorMessage(res.message)\r\n                )\r\n                .catch(e => showErrorMessage(e.message));\r\n        }\r\n    }\r\n\r\n    renderButtons(_id, title, content, scheduled, index) {\r\n        return (\r\n            <div className={'d-f w-100 f-w j-c-s-a'}>\r\n                <button className={'b-r-10px m-10px d-f bg-dark-blue button w-30p p-10px j-c-c'}\r\n                        onClick={this.showEditTask.bind(this, _id, title, content, scheduled, index)}\r\n                >\r\n                    Edit\r\n                </button>\r\n                <button className={'b-r-10px m-10px d-f bg-dark-blue button w-30p p-10px j-c-c'}\r\n                        onClick={event => this.deleteTask(_id, index, event)}\r\n                >\r\n                    Delete\r\n                </button>\r\n                <button\r\n                    className={'b-r-10px d-f m-10px bg-dark-blue button w-30p p-10px j-c-c'}\r\n                    onClick={this.handleSharingTask.bind(this, _id, title)}\r\n                >\r\n                    Share\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderTasks = () => {\r\n        const {tasks} = this.props;\r\n        return tasks.length\r\n            ? tasks.map(({_id, title, content, scheduled, createdBy}, index) => {\r\n                return (\r\n                    <span key={index} className={'d-f f-d-c j-c-s-b list m-w-100p m-10-0px b-r-10px'}>\r\n                        <span className={'d-f f-s-2em m-b-10px'}>{title}</span>\r\n                        <span className={'d-f w-30 b-r-10px b-1px-s-dark-blue p-5px'}>{content}</span>\r\n                        <span className={'d-f f-w j-c-s-b m-t-10px'}>\r\n                            <span className={'d-f m-r-10px'}>Created by: {createdBy}</span>\r\n                            <span className={'d-f m-l-10px'}>Scheduled: {scheduled.split('T')[0]}</span>\r\n                        </span>\r\n                        {\r\n                            (createdBy === _.get(JSON.parse(localStorage.getItem('user')), 'name', ''))\r\n                                ? this.renderButtons(_id, title, content, scheduled, index)\r\n                                : (\r\n                                    <div className={'d-f f-d-c f-w'}>\r\n                                        <span className={'d-f f-w j-c-c p-10px b-r-10px'}>{createdBy} has shared that task with you. Only {createdBy} can edit and delete it with someone else</span>\r\n                                        <div className={'d-f w-100 f-w j-c-s-a'}>\r\n                                            <button\r\n                                                className={'b-r-10px d-f m-10px bg-dark-blue button p-10px j-c-c w-40'}\r\n                                                onClick={event => this.removeSharedLink(_id, index, event)}\r\n                                            >\r\n                                                Remove shared link of this task from me\r\n                                            </button>\r\n                                            <button\r\n                                                className={'b-r-10px d-f m-10px bg-dark-blue button p-10px j-c-c w-40'}\r\n                                                onClick={this.handleSharingTask.bind(this, _id, title)}\r\n                                            >\r\n                                                Share\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>)\r\n                        }\r\n                    </span>\r\n                );\r\n            })\r\n            : <span className={'d-f j-c-c w-100 p-100-0 t-c-azure f-s-2em'}>\r\n                <span className={'d-f'}>You have no tasks for now</span>\r\n            </span>;\r\n\r\n    };\r\n\r\n    renderTaskEditor() {\r\n        let {currentTaskData, isTaskCreating} = this.props;\r\n        let {title, content, scheduled} = this.state.taskBody;\r\n\r\n        let createButton = isTaskCreating &&\r\n            <input type={'submit'}\r\n                   className={'button m-0-5-5-5-px d-f j-c-c bg-dark-blue b-r-10px p-10px'}\r\n                   value={'Create'}\r\n            />;\r\n\r\n        let handleFunction = isTaskCreating\r\n            ? this.handleCreating\r\n            : this.handleEditing;\r\n\r\n        return (\r\n            <form onSubmit={this.createTask} className={'d-f f-w f-d-c w-100 list'}>\r\n                <span className={'d-f'}>\r\n                    Title\r\n                </span>\r\n                <input type='text'\r\n                       className={'d-f input b-n b-r-10px'}\r\n                       value={!isTaskCreating ? currentTaskData.title : title}\r\n                       onChange={event => handleFunction('title', event)}\r\n                />\r\n\r\n                <span className={'d-f'}>Content</span>\r\n                <textarea className={'d-f w-30 h-200px b-n input scroll-bar scroll-bar-b-c-white b-r-10px'}\r\n                          value={!isTaskCreating ? currentTaskData.content : content}\r\n                          onChange={event => handleFunction('content', event)}\r\n                />\r\n\r\n                <span className={'d-f'}>At:</span>\r\n                <input type=\"date\"\r\n                       className={'d-f input b-n w-40 b-r-10px'}\r\n                       value={!isTaskCreating ? currentTaskData.scheduled : scheduled}\r\n                       onChange={event => handleFunction('scheduled', event)}\r\n                />\r\n                {createButton}\r\n            </form>\r\n        );\r\n    }\r\n\r\n    handleEditing = (field, {target: {value}}) => {\r\n        const {handleEditingTaskField} = this.props;\r\n        handleEditingTaskField(field, value);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const {handleCancel} = this.props;\r\n        handleCancel();\r\n    };\r\n\r\n    handleCreating = (field, {target: {value}}) => {\r\n        const {taskBody} = this.state;\r\n        let taskBodyCopy = {...taskBody};\r\n        taskBodyCopy[field] = value;\r\n        this.setState({taskBody: taskBodyCopy});\r\n    };\r\n\r\n    showCreateTask = () => {\r\n        const {handleCreatingTask} = this.props;\r\n        handleCreatingTask();\r\n    };\r\n\r\n    showEditTask = (_id, title, content, scheduled, indexOfCurrentTask) => {\r\n        const {showEditTask} = this.props;\r\n        showEditTask(_id, title, content, scheduled, indexOfCurrentTask);\r\n    };\r\n\r\n    saveChanges = () => {\r\n        const {showErrorMessage, startLoading, saveChanges, currentTaskData, TaskService: {putTask}} = this.props;\r\n        startLoading();\r\n        return putTask(currentTaskData, _.get(JSON.parse(localStorage.getItem('user')), 'token', false))\r\n            .then(res => {\r\n                return res.success\r\n                        ? saveChanges(res.message)\r\n                        : showErrorMessage(res.message)\r\n                }\r\n            )\r\n                .catch(e => {\r\n                    console.log(e.message);\r\n                    showErrorMessage(e.message)\r\n                });\r\n    };\r\n\r\n    createTask = (event) => {\r\n        event.preventDefault();\r\n\r\n        const {taskBody} = this.state;\r\n        const {showErrorMessage, startLoading, createTask, TaskService: {postTask}} = this.props;\r\n\r\n        let taskBodyCopy = {...taskBody};\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        taskBodyCopy.userId = user.id;\r\n        taskBodyCopy.createdBy = user.name;\r\n\r\n        startLoading();\r\n\r\n        return postTask(taskBodyCopy, user.token)\r\n            .then(res => {\r\n                if(res.success) {\r\n\r\n                    taskBodyCopy._id = res.taskId;\r\n                    return createTask(taskBodyCopy, res.message);\r\n\r\n                } else {\r\n                    return showErrorMessage(res.message);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                showErrorMessage(e.message)\r\n            });\r\n    };\r\n\r\n\r\n    deleteTask = (taskId, index, event) => {\r\n        event.preventDefault();\r\n        const {startLoading, showErrorMessage, deleteChosenTask, TaskService: {deleteTask}} = this.props;\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        startLoading();\r\n        return deleteTask(taskId, user.token)\r\n            .then(res => res.success\r\n                ? deleteChosenTask(index, res.message)\r\n                : showErrorMessage(res.message)\r\n            )\r\n            .catch(e => {\r\n                console.log(e);\r\n                showErrorMessage(e.message);\r\n            });\r\n    };\r\n\r\n    removeSharedLink = (taskId, index, event) => {\r\n        event.preventDefault();\r\n\r\n        const {startLoading, showErrorMessage, removeSharedLinkOfSelectedTask, TaskService: {removeSharedLink}} = this.props;\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        startLoading();\r\n        return removeSharedLink(taskId, _.get(user, 'id', false), _.get(user, 'token', false))\r\n            .then(res => res.success\r\n                ? removeSharedLinkOfSelectedTask(index, res.message)\r\n                : showErrorMessage(res.message)\r\n            )\r\n            .catch(e => {\r\n                console.log(e);\r\n                showErrorMessage(e.message);\r\n            });\r\n    };\r\n\r\n\r\n    handleSharingTask = (_id, title) => {\r\n        const {handleSharingTask} = this.props;\r\n        handleSharingTask(title, _id);\r\n    };\r\n\r\n    render() {\r\n        const dataToEdit = (this.props.isEditable || this.props.isTaskCreating)\r\n            ? this.renderTaskEditor()\r\n            : null;\r\n\r\n        const saveButton = this.props.isEditable && !this.props.isTaskCreating\r\n            && <button\r\n                className={'button m-10px w-100 d-f j-c-c p-10px'}\r\n                onClick={this.saveChanges}\r\n            >\r\n                Save\r\n            </button>;\r\n\r\n        const cancelButton = this.props.isEditable || this.props.isTaskCreating\r\n            ? <button\r\n                className={'button m-10px w-100 d-f j-c-c p-10px'}\r\n                onClick={this.handleCancel}\r\n            >\r\n                Cancel\r\n            </button>\r\n            : false;\r\n\r\n        return (\r\n            <span>\r\n                <div className={'d-f f-d-c'}>\r\n                    <div className={'d-f w-100 j-c-s-b w-100'}>\r\n                        <button\r\n                            className={'button m-10px w-100 d-f j-c-c p-10px'}\r\n                            onClick={this.showCreateTask}\r\n                        >\r\n                            Create\r\n                        </button>\r\n                        {saveButton}\r\n                        {cancelButton}\r\n                    </div>\r\n                    <div className={'d-f w-100 m-0-5-5-5-px'}>\r\n                        {dataToEdit}\r\n                    </div>\r\n                </div>\r\n                <div className={'d-f f-d-c j-c-c p-10px'}>\r\n                    {this.renderTasks()}\r\n                </div>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({isEditable, isTaskCreating, currentTaskData, tasks, user, isUserEntered}) => {\r\n    return {isEditable, isTaskCreating, currentTaskData, tasks, user, isUserEntered};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleEditingTaskField: (field, value) => dispatch(handleEditingTaskField(field, value)),\r\n        handleCreatingTask: () => dispatch(handleCreatingTask()),\r\n        handleSharingTask: (title, _id) => dispatch(handleSharingTask(title, _id)),\r\n        handleCancel: () => dispatch(handleCancel()),\r\n\r\n        saveChanges: msg => dispatch(saveChanges(msg)),\r\n        createTask: (taskBody, msg) => dispatch(createTask(taskBody, msg)),\r\n        removeSharedLinkOfSelectedTask: (index, msg) => dispatch(removeSharedLink(index, msg)),\r\n        deleteChosenTask: (indexOfTask, msg) => dispatch(deleteTask(indexOfTask, msg)),\r\n\r\n        showEditTask: (_id, title, content, scheduled, index) => dispatch(showEditTask(_id, title, content, scheduled, index)),\r\n        showErrorMessage: msg => dispatch(showErrorMessage(msg)),\r\n\r\n        onTaskLoaded: (tasks) => dispatch(onTaskLoaded(tasks)),\r\n        startLoading: () => dispatch(startLoading())\r\n    };\r\n};\r\n\r\nexport default withApiCall(connect(mapStateToProps, mapDispatchToProps)(TaskEditorComponent));","import {\r\n    HANDLE_EDITING_TASK_FIELD,\r\n    HANDLE_CREATING_TASK,\r\n    SAVE_CHANGES,\r\n    CREATE_TASK,\r\n    SHOW_EDIT_TASK,\r\n    ON_TASK_LOADED,\r\n    DELETE_TASK,\r\n    SHARE_TASK,\r\n    HANDLE_SHARING_TASK,\r\n    HIDE_SHARE_MENU,\r\n    HANDLE_CANCEL\r\n} from \"../action-types\";\r\n\r\nexport const showEditTask = (_id, title, content, scheduled, index) => {\r\n    return {\r\n        type: SHOW_EDIT_TASK,\r\n        payload: {_id, title, content, scheduled, index}\r\n    };\r\n};\r\n\r\nexport const handleCancel = () => {\r\n    return {\r\n        type: HANDLE_CANCEL,\r\n    };\r\n};\r\n\r\nexport const handleEditingTaskField = (field, value) => {\r\n    return {\r\n        type: HANDLE_EDITING_TASK_FIELD,\r\n        payload: {field, value}\r\n    };\r\n};\r\n\r\nexport const handleCreatingTask = () => {\r\n    return {\r\n        type: HANDLE_CREATING_TASK\r\n    };\r\n};\r\nexport const onTaskLoaded = (message) => {\r\n    return {\r\n        type: ON_TASK_LOADED,\r\n        payload: message\r\n    }\r\n};\r\n\r\nexport const saveChanges = message => {\r\n    return {\r\n        type: SAVE_CHANGES,\r\n        payload: message\r\n    }\r\n};\r\n\r\nexport const createTask = (taskBody, message) => {\r\n    return {\r\n        type: CREATE_TASK,\r\n        payload: {taskBody, message}\r\n    }\r\n};\r\n\r\nexport const deleteTask = (indexOfTask, message) => {\r\n    return {\r\n        type: DELETE_TASK,\r\n        payload: {indexOfTask, message}\r\n    }\r\n};\r\n\r\nexport const hideShareMenu = () => {\r\n    return {\r\n        type: HIDE_SHARE_MENU\r\n    };\r\n};\r\n\r\nexport const handleSharingTask = (title, _id) => {\r\n    return {\r\n        type: HANDLE_SHARING_TASK,\r\n        payload: {title, _id}\r\n    }\r\n};\r\n\r\nexport const shareTask = (message) => {\r\n    return {\r\n        type: SHARE_TASK,\r\n        payload: message\r\n    };\r\n};\r\n\r\nexport const removeSharedLink = (indexOfTask, message) => {\r\n    return {\r\n        type: DELETE_TASK,\r\n        payload: {indexOfTask, message}\r\n    };\r\n};\r\n","import '../components/index.css';\r\nimport React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {hideMessage} from \"../actions/message-actions\";\r\n\r\nexport class LoggerComponent extends Component {\r\n    renderSuccessMessage = (msg) => {\r\n        return (\r\n            <div className=\"isa_success logMsg\" onAnimationEnd={this.closeMessage.bind(this, 'isa_success ')}>\r\n                <i className=\"fa fa-check\" />\r\n                {msg}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderErrorMessage = (msg) => {\r\n        return (\r\n            <div className=\"isa_error logMsg\" onAnimationEnd={this.closeMessage.bind(this, 'isa_error')}>\r\n                <i className=\"fa fa-times-circle\" />\r\n                {msg}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    closeMessage = (className) => {\r\n        const {hideMessage} = this.props;\r\n        let element = document.getElementsByClassName(className)[0];\r\n        setTimeout(() => {\r\n            element.setAttribute('style', \"animation-name: hideMsg; animation-duration: 1s;\");\r\n        }, 2000);\r\n        setTimeout(() => {\r\n            hideMessage();\r\n        }, 4000);\r\n    };\r\n\r\n    render() {\r\n        const {showSuccessMsg, showErrorMsg, msg} = this.props;\r\n\r\n        const successMsg = showSuccessMsg\r\n            ? this.renderSuccessMessage(msg)\r\n            : null;\r\n\r\n        const errorMsg = showErrorMsg\r\n            ? this.renderErrorMessage(msg)\r\n            : null;\r\n\r\n        return (\r\n            <div>\r\n                {successMsg || errorMsg}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({showSuccessMsg, showErrorMsg, msg}) => {\r\n    return {showSuccessMsg, showErrorMsg, msg};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        hideMessage: () => dispatch(hideMessage())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoggerComponent);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {loadUsers, startLoading} from \"../actions/user-actions\";\r\nimport {showErrorMessage} from \"../actions/message-actions\";\r\nimport {hideShareMenu, shareTask} from \"../actions/task-actions\";\r\nimport {withApiCall} from \"../hoc/api\";\r\nimport _ from 'lodash';\r\n\r\nclass ShareMenuComponent extends Component {\r\n    state = {\r\n        chosenUserNames: [],\r\n        chosenUsersId: []\r\n    };\r\n\r\n    user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    componentDidMount() {\r\n        const {loadUsers, showErrorMessage, UserService: {getAllUsers}} = this.props;\r\n        if (_.get(this.user, 'token', false)) {\r\n            return getAllUsers(this.user.id, this.user.token)\r\n                .then(res => res.success\r\n                    ? loadUsers(res.message)\r\n                    : showErrorMessage(res.message)\r\n                )\r\n                .catch(e => {\r\n                    console.log(e.message);\r\n                    showErrorMessage(e.message);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    shareTaskWithSelectedUsers = (id) => {\r\n        const {shareSelectedTask, showErrorMessage, startLoading, TaskService: {shareTask}} = this.props;\r\n        const {chosenUsersId} = this.state;\r\n\r\n        startLoading();\r\n        return shareTask(id, chosenUsersId, _.get(this.user, 'token', false))\r\n            .then(res => res.success\r\n                ? shareSelectedTask(res.message)\r\n                : showErrorMessage(res.message)\r\n            )\r\n            .catch(e => {\r\n                console.log(e);\r\n                showErrorMessage(e.message);\r\n\r\n            });\r\n};\r\n\r\n    handleChoosingUser = (userName, userId) => {\r\n        const {chosenUserNames, chosenUsersId} = this.state;\r\n\r\n        let chosenUserNamesCopy = [...chosenUserNames];\r\n        let chosenUsersIdCopy = [...chosenUsersId];\r\n\r\n        if (!chosenUserNamesCopy.includes(userName) ) {\r\n\r\n            chosenUserNamesCopy.push(userName);\r\n            chosenUsersIdCopy.push(userId);\r\n\r\n            this.setState({chosenUserNames: chosenUserNamesCopy, chosenUsersId: chosenUsersIdCopy});\r\n        } else {\r\n\r\n            let index = chosenUserNamesCopy.indexOf(userName);\r\n\r\n            chosenUserNamesCopy.splice(index, 1);\r\n            chosenUsersIdCopy.splice(index, 1);\r\n\r\n            this.setState({chosenUserNames: chosenUserNamesCopy, chosenUsersId: chosenUsersIdCopy});\r\n        }\r\n    };\r\n\r\n    closeShareMenu = () => {\r\n        const {hideShareMenu} = this.props;\r\n        hideShareMenu();\r\n    };\r\n\r\n\r\n    render() {\r\n        const {users, taskToShare: {title, _id}} = this.props;\r\n        const {chosenUserNames} = this.state;\r\n        return (\r\n            <div className={'share-menu d-f f-s-20px j-c-c'}>\r\n                <div className={'d-f w-30 f-d-c j-c-s-a p-10px t-c-azure share-list'}>\r\n                    <span className={'d-f'}>\r\n                        Select user with who you want to share task with title: {title}\r\n                    </span>\r\n                    <ul className={'d-f j-c-c f-d-c bg-dark-blue h-500px p-10px'}>\r\n                        <span className={'d-f j-c-c m-b-10px b-b-1px-s-azure'}>Users</span>\r\n                        <div className=\"scrollbar scroller\">\r\n                            {users.map(({name, email, _id}, index) => {\r\n                                return (\r\n                                    <li key={email}\r\n                                        className={'b-1px-s-azure d-f clickable m-10px f-d-c j-c-c p-10px'}\r\n                                        onClick={this.handleChoosingUser.bind(this, name, _id)}\r\n                                    >\r\n                                        <span className={'d-f'}>\r\n                                            Name: {name}\r\n                                        </span>\r\n                                        <span className={'d-f'}>\r\n                                            Email: {email}\r\n                                        </span>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </ul>\r\n                    <span>You choose: {chosenUserNames.join(', ')}</span>\r\n                    <div className={'d-f j-c-s-a f-w w-100'}>\r\n                        <button className={'b-r-10px m-10px d-f bg-dark-blue button w-40 p-10px j-c-c'}\r\n                                onClick={this.shareTaskWithSelectedUsers.bind(this, _id)}\r\n                        >\r\n                            Share\r\n                        </button>\r\n                        <button className={'b-r-10px m-10px d-f bg-dark-blue button w-40 p-10px j-c-c'}\r\n                                onClick={this.closeShareMenu}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = ({users, taskToShare}) => {\r\n    return {users, taskToShare};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loadUsers: msg => dispatch(loadUsers(msg)),\r\n        showErrorMessage: msg => dispatch(showErrorMessage(msg)),\r\n        hideShareMenu: () => dispatch(hideShareMenu()),\r\n        shareSelectedTask: msg => dispatch(shareTask(msg)),\r\n        startLoading: () => dispatch(startLoading())\r\n    };\r\n};\r\n\r\nexport default withApiCall(connect(mapStateToProps, mapDispatchToProps)(ShareMenuComponent));","import React from 'react';\r\n\r\nfunction HeaderComponent() {\r\n    return (\r\n        <header className={'header w-100'}>\r\n            <span className={'header-text f-s-5em'}>Tasks</span>\r\n        </header>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HeaderComponent;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={'share-menu'}>\r\n            <div className=\"lds-facebook\">\r\n                <div className={'d-f'}></div>\r\n                <div className={'d-f'}></div>\r\n                <div className={'d-f'}></div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Loader;","import React, {Component} from 'react';\n\nimport RegistrationComponent from './components/Registration';\nimport LoginComponent from './components/Login';\nimport TaskEditor from './components/TaskEditor';\nimport LoggerComponent from './components/Logger';\nimport ShareMenuComponent from './components/ShareMenu';\nimport HeaderComponent from './components/Header';\nimport Loader from './components/Loader';\n\nimport {checkUserAndRedirect} from \"./helpers/tokenVerificator\";\n\nimport './App.css';\nimport './components/index.css';\n\nimport {connect} from \"react-redux\";\nimport {BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport _ from 'lodash';\nimport {onLeaveUser} from \"./actions/user-actions\";\n\nclass AppComponent extends Component {\n\n    handleLogOut = () => {\n        const {onLeaveUser} = this.props;\n        onLeaveUser();\n        return <Redirect to={{\n            pathname: '/login'\n        }} />\n    };\n\n    componentDidMount() {\n        checkUserAndRedirect()\n    }\n\n    render() {\n        const {showShareMenu, loader, showMsg} = this.props;\n        const renderLogOutButton = <button className={'log-out p-10px button f-s-20px'} onClick={this.handleLogOut}>Log out</button>;\n\n        return (\n            <div>\n                <Router>\n                    {checkUserAndRedirect()}\n                    {_.get(JSON.parse(localStorage.getItem('user')), 'token', false) && renderLogOutButton || checkUserAndRedirect()}\n                    {loader && <Loader />}\n                    {showShareMenu && <ShareMenuComponent />}\n                    {showMsg && <LoggerComponent/>}\n                    <HeaderComponent />\n                    <Switch>\n                        <Route exact path={'/login'}  component={LoginComponent}/>\n                        <Route exact path={'/register'} component={RegistrationComponent}/>\n                        <Route exact path={'/main'} component={TaskEditor}/>\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({showMsg, showShareMenu, isUserEntered, loader}) => {\n    return {showMsg, showShareMenu, isUserEntered, loader}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onLeaveUser: () => dispatch(onLeaveUser())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppComponent);","import {\r\n    SHOW_EDIT_TASK,\r\n    HANDLE_EDITING_TASK_FIELD,\r\n    ON_TASK_LOADED,\r\n    SAVE_CHANGES,\r\n    HANDLE_CREATING_TASK,\r\n    CREATE_TASK,\r\n    ON_ENTER_USER,\r\n    ON_LEAVE_USER,\r\n    DELETE_TASK,\r\n    SHOW_ERROR_MSG,\r\n    HIDE_MSG,\r\n    HANDLE_SHARING_TASK,\r\n    GET_USERS,\r\n    HIDE_SHARE_MENU,\r\n    SHARE_TASK,\r\n    START_LOADING,\r\n    HANDLE_CANCEL\r\n} from '../action-types';\r\n\r\nconst initialState = {\r\n    currentTaskData: {\r\n        title: '',\r\n        content: '',\r\n        scheduled: ''\r\n    },\r\n\r\n    taskToShare: {\r\n        _id: null,\r\n        title: null\r\n    },\r\n\r\n    tasks: [],\r\n    users: [],\r\n\r\n    isEditable: false,\r\n    isTaskCreating: false,\r\n    isUserEntered: false,\r\n\r\n    loader: false,\r\n\r\n    showShareMenu: false,\r\n\r\n    showSuccessMsg: false,\r\n    showErrorMsg: false,\r\n    showMsg: false,\r\n\r\n    value: null,\r\n    indexOfCurrentTask: null,\r\n\r\n    msg: ''\r\n};\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    let {payload} = action;\r\n    switch (action.type) {\r\n        case  HANDLE_EDITING_TASK_FIELD: {\r\n            let {field, value} = payload;\r\n\r\n            let taskDataCopy = {...state.currentTaskData};\r\n            taskDataCopy[field] = value;\r\n\r\n            return {...state, currentTaskData: taskDataCopy};\r\n        }\r\n\r\n        case SHOW_EDIT_TASK: {\r\n            let {_id, title, content, scheduled, index} = payload;\r\n\r\n            let currentTaskData = {\r\n                _id, title, content, scheduled\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                currentTaskData,\r\n                isEditable: true,\r\n                isTaskCreating: false,\r\n                indexOfCurrentTask: index\r\n            };\r\n        }\r\n\r\n        case ON_TASK_LOADED: {\r\n            return {...state, tasks: payload, loader: false};\r\n        }\r\n\r\n        case HANDLE_CREATING_TASK: {\r\n            let currentTaskData = {\r\n                title: '',\r\n                content: '',\r\n                scheduled: ''\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                isTaskCreating: true,\r\n                isEditable: false,\r\n                currentTaskData: currentTaskData\r\n            };\r\n        }\r\n\r\n        case HANDLE_SHARING_TASK: {\r\n            return {...state, taskToShare: payload, showShareMenu: true, loader: false};\r\n        }\r\n\r\n        case HIDE_SHARE_MENU: {\r\n            return {...state, showShareMenu: false};\r\n        }\r\n\r\n        case SAVE_CHANGES: {\r\n            let {tasks, indexOfCurrentTask, currentTaskData} = state;\r\n\r\n            let tasksCopy = [...tasks];\r\n\r\n            currentTaskData._id = tasksCopy[indexOfCurrentTask]._id;\r\n            currentTaskData.createdBy = tasksCopy[indexOfCurrentTask].createdBy;\r\n\r\n            tasksCopy[indexOfCurrentTask] = currentTaskData;\r\n\r\n            return {\r\n                ...state,\r\n                tasks: tasksCopy,\r\n                msg: payload,\r\n                showSuccessMsg: true,\r\n                showMsg: true,\r\n                loader: false\r\n            };\r\n        }\r\n\r\n        case CREATE_TASK: {\r\n            const {taskBody, message} = payload;\r\n            let {tasks} = state;\r\n\r\n            let taskCopy = [...tasks];\r\n            taskCopy.unshift(taskBody);\r\n\r\n            return {\r\n                ...state,\r\n                tasks: taskCopy,\r\n                msg: message,\r\n                showSuccessMsg: true,\r\n                showMsg: true,\r\n                loader: false\r\n            };\r\n        }\r\n\r\n        case DELETE_TASK: {\r\n            const {indexOfTask, message} = payload;\r\n            let {tasks} = state;\r\n            let taskCopy = [...tasks];\r\n            taskCopy.splice(indexOfTask, 1);\r\n\r\n            return {\r\n                ...state,\r\n                tasks: taskCopy,\r\n                msg: message,\r\n                showSuccessMsg: true,\r\n                showMsg: true,\r\n                loader: false\r\n            };\r\n        }\r\n\r\n        case SHARE_TASK: {\r\n            return {\r\n                ...state,\r\n                msg: payload,\r\n                showSuccessMsg: true,\r\n                showMsg: true,\r\n                loader: false\r\n            }\r\n        }\r\n\r\n        case HANDLE_CANCEL: {\r\n            return {\r\n                ...state,\r\n                isEditable: false,\r\n                isTaskCreating: false\r\n            }\r\n        }\r\n\r\n        case ON_ENTER_USER: {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            return {\r\n                ...state,\r\n                user: user,\r\n                isUserEntered: true,\r\n                msg: payload,\r\n                showSuccessMsg: true,\r\n                showMsg: true,\r\n                loader: false\r\n            };\r\n        }\r\n\r\n        case ON_LEAVE_USER: {\r\n            localStorage.removeItem('user');\r\n            return {...state, isUserEntered: false, tasks: [], users: []};\r\n        }\r\n\r\n        case START_LOADING: {\r\n            return {...state, loader: true};\r\n        }\r\n\r\n        case GET_USERS: {\r\n            return {...state, users: payload, loader: false};\r\n        }\r\n\r\n        case SHOW_ERROR_MSG: {\r\n            return {...state, msg: payload, showErrorMsg: true, showMsg: true, loader: false};\r\n        }\r\n\r\n        case HIDE_MSG: {\r\n            return {...state, showSuccessMsg: false, showErrorMsg: false, showMsg: false, msg: ''};\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import {applyMiddleware, createStore} from 'redux';\r\nimport reducer from '../reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppComponent from './App';\nimport {Provider} from 'react-redux';\nimport {store} from \"./store/store\";\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppComponent />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}